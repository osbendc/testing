{"remainingRequest":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/osbendc/Desktop/Github/vinushut-vue/src/main.js","dependencies":[{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/src/main.js","mtime":1617802825924},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js","mtime":1617803144756}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.find\";\n// Plugins\nimport Vuex from 'vuex';\nimport VueApollo from 'vue-apollo'; //import Notifications from 'vue-notification'\n\nimport Notifications from 'vue-notification/dist/ssr';\nimport '~/assets/style/notification.css'; // Dependencies\n\nimport ApolloClient from 'apollo-boost';\nimport fetch from 'isomorphic-fetch';\nimport DefaultLayout from '~/layouts/Default.vue';\nimport VueScrollTo from 'vue-scrollto';\nexport default function (Vue, _ref) {\n  var appOptions = _ref.appOptions,\n      router = _ref.router,\n      head = _ref.head,\n      isClient = _ref.isClient;\n  // Set default layout as a global component\n  Vue.component('Layout', DefaultLayout);\n  Vue.use(Vuex);\n  Vue.use(VueApollo);\n  Vue.use(Notifications);\n  Vue.use(VueScrollTo, {\n    duration: 500,\n    easing: \"ease\"\n  });\n  /*\n  head.link.push({\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css?family=Prata'\n  })\n  */\n  // Create Apollo client\n\n  var apolloClient = new ApolloClient({\n    fetch: fetch,\n    uri: \"https://vinushot.myshopify.com/api/2020-07/graphql.json\",\n    headers: {\n      'X-Shopify-Storefront-Access-Token': 'a9425f734f0e7b049528466bbdd2b13e'\n    }\n  }); // Add client to vue-apollo provider\n\n  var apolloProvider = new VueApollo({\n    defaultClient: apolloClient\n  }); // Add provider to vue app\n\n  appOptions.apolloProvider = apolloProvider; // Create Vuex store\n\n  appOptions.store = new Vuex.Store({\n    state: {\n      cart: []\n    },\n    mutations: {\n      addToCart: function addToCart(state, newItem) {\n        var itemExists = state.cart.find(function (item) {\n          return item.variantId === newItem.variantId;\n        });\n        if (itemExists) itemExists.qty += newItem.qty;else state.cart.push(newItem);\n      },\n      removeFromCart: function removeFromCart(state, itemId) {\n        var updatedCart = state.cart.filter(function (item) {\n          return item.variantId !== itemId;\n        });\n        state.cart = updatedCart;\n      }\n    }\n  });\n}",{"version":3,"sources":["/Users/osbendc/Desktop/Github/vinushut-vue/src/main.js"],"names":["Vuex","VueApollo","Notifications","ApolloClient","fetch","DefaultLayout","VueScrollTo","Vue","appOptions","router","head","isClient","component","use","duration","easing","apolloClient","uri","headers","apolloProvider","defaultClient","store","Store","state","cart","mutations","addToCart","newItem","itemExists","find","item","variantId","qty","push","removeFromCart","itemId","updatedCart","filter"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAO,iCAAP,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,eAAe,UAAUC,GAAV,QAAuD;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACpE;AACAJ,EAAAA,GAAG,CAACK,SAAJ,CAAc,QAAd,EAAwBP,aAAxB;AAEAE,EAAAA,GAAG,CAACM,GAAJ,CAAQb,IAAR;AACAO,EAAAA,GAAG,CAACM,GAAJ,CAAQZ,SAAR;AACAM,EAAAA,GAAG,CAACM,GAAJ,CAAQX,aAAR;AAEAK,EAAAA,GAAG,CAACM,GAAJ,CAAQP,WAAR,EAAqB;AACnBQ,IAAAA,QAAQ,EAAE,GADS;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAArB;AAKA;;;;;;AAOA;;AACA,MAAMC,YAAY,GAAG,IAAIb,YAAJ,CAAiB;AACpCC,IAAAA,KAAK,EAALA,KADoC;AAEpCa,IAAAA,GAAG,2DAFiC;AAGpCC,IAAAA,OAAO,EAAE;AACP,2CAAqC;AAD9B;AAH2B,GAAjB,CAArB,CArBoE,CA6BpE;;AACA,MAAMC,cAAc,GAAG,IAAIlB,SAAJ,CAAc;AACnCmB,IAAAA,aAAa,EAAEJ;AADoB,GAAd,CAAvB,CA9BoE,CAkCpE;;AACAR,EAAAA,UAAU,CAACW,cAAX,GAA4BA,cAA5B,CAnCoE,CAqCpE;;AACAX,EAAAA,UAAU,CAACa,KAAX,GAAmB,IAAIrB,IAAI,CAACsB,KAAT,CAAe;AAChCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KADyB;AAIhCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,mBAACH,KAAD,EAAQI,OAAR,EAAoB;AAC7B,YAAMC,UAAU,GAAGL,KAAK,CAACC,IAAN,CAAWK,IAAX,CAAgB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,SAAL,KAAmBJ,OAAO,CAACI,SAA/B;AAAA,SAApB,CAAnB;AAEA,YAAIH,UAAJ,EAAgBA,UAAU,CAACI,GAAX,IAAkBL,OAAO,CAACK,GAA1B,CAAhB,KACKT,KAAK,CAACC,IAAN,CAAWS,IAAX,CAAgBN,OAAhB;AACN,OANQ;AAOTO,MAAAA,cAAc,EAAE,wBAACX,KAAD,EAAQY,MAAR,EAAmB;AACjC,YAAMC,WAAW,GAAGb,KAAK,CAACC,IAAN,CAAWa,MAAX,CAAkB,UAAAP,IAAI;AAAA,iBAAIA,IAAI,CAACC,SAAL,KAAmBI,MAAvB;AAAA,SAAtB,CAApB;AACAZ,QAAAA,KAAK,CAACC,IAAN,GAAaY,WAAb;AACD;AAVQ;AAJqB,GAAf,CAAnB;AAiBD","sourcesContent":["// Plugins\nimport Vuex from 'vuex'\nimport VueApollo from 'vue-apollo'\n\n//import Notifications from 'vue-notification'\nimport Notifications from 'vue-notification/dist/ssr'\nimport '~/assets/style/notification.css'\n\n// Dependencies\nimport ApolloClient from 'apollo-boost'\nimport fetch from 'isomorphic-fetch'\n\nimport DefaultLayout from '~/layouts/Default.vue'\nimport VueScrollTo from 'vue-scrollto'\n\nexport default function (Vue, { appOptions, router, head, isClient }) {\n  // Set default layout as a global component\n  Vue.component('Layout', DefaultLayout)\n\n  Vue.use(Vuex)\n  Vue.use(VueApollo)\n  Vue.use(Notifications)\n\n  Vue.use(VueScrollTo, {\n    duration: 500,\n    easing: \"ease\",\n  })\n\n  /*\n  head.link.push({\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css?family=Prata'\n  })\n  */\n\n  // Create Apollo client\n  const apolloClient = new ApolloClient({\n    fetch,\n    uri: `https://vinushot.myshopify.com/api/2020-07/graphql.json`,\n    headers: {\n      'X-Shopify-Storefront-Access-Token': 'a9425f734f0e7b049528466bbdd2b13e'\n    }\n  })\n\n  // Add client to vue-apollo provider\n  const apolloProvider = new VueApollo({\n    defaultClient: apolloClient\n  })\n\n  // Add provider to vue app\n  appOptions.apolloProvider = apolloProvider\n\n  // Create Vuex store\n  appOptions.store = new Vuex.Store({\n    state: {\n      cart: []\n    },\n    mutations: {\n      addToCart: (state, newItem) => {\n        const itemExists = state.cart.find(item => item.variantId === newItem.variantId)\n\n        if (itemExists) itemExists.qty += newItem.qty\n        else state.cart.push(newItem)\n      },\n      removeFromCart: (state, itemId) => {\n        const updatedCart = state.cart.filter(item => item.variantId !== itemId)\n        state.cart = updatedCart\n      }\n    }\n  })\n}\n\n\n"]}]}