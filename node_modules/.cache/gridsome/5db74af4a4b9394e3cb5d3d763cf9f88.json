{"remainingRequest":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/gridsome-plugin-pwa/gridsome.client.js","dependencies":[{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/gridsome-plugin-pwa/gridsome.client.js","mtime":1617803158754},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js","mtime":1617803144756}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.find\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/es.string.link\";\n\nvar _require = require('register-service-worker'),\n    register = _require.register;\n\nvar clientConfig = function clientConfig(Vue, options, context) {\n  var head = context.head,\n      isClient = context.isClient;\n\n  if (process.env.NODE_ENV === 'production' && isClient) {\n    register(options.serviceWorkerPath, {\n      ready: function ready() {\n        console.log('Service worker is active.');\n      },\n      registered: function registered(registration) {\n        console.log('Service worker has been registered.');\n      },\n      cached: function cached(registration) {\n        console.log('Content has been cached for offline use.');\n      },\n      updatefound: function updatefound(registration) {\n        console.log('New content is downloading.');\n      },\n      updated: function updated(registration) {\n        registration.waiting.postMessage({\n          type: 'SKIP_WAITING'\n        });\n        console.log('New content is available; please refresh.');\n      },\n      offline: function offline() {\n        console.log('No internet connection found. App is running in offline mode.');\n      },\n      error: function error(_error) {\n        console.error('Error during service worker registration:', _error);\n      }\n    });\n  }\n\n  var iconsDir = 'assets/static/';\n  var iconName = options.icon.split('/').slice(-1)[0];\n  var msTileImage = \"/\".concat(iconsDir).concat(iconName, \"-144x144.png\");\n  head.link.push({\n    rel: 'manifest',\n    href: options.manifestPath.replace('\\\\', '/')\n  });\n\n  if (options.svgFavicon) {\n    var emptyIcon = head.link.find(function (x) {\n      return x.rel === 'icon' && x.href === 'data:,';\n    });\n\n    if (emptyIcon) {\n      var index = head.link.indexOf(emptyIcon);\n      head.link.splice(index, 1);\n    }\n\n    head.link.push({\n      rel: 'icon',\n      type: 'image/svg+xml',\n      href: options.svgFavicon\n    });\n    head.link.push({\n      rel: 'alternate icon',\n      href: 'favicon.ico'\n    });\n  }\n\n  if (options.appleMaskIcon && options.appleMaskIconColor) {\n    head.link.push({\n      rel: 'mask-icon',\n      href: options.appleMaskIcon,\n      color: options.appleMaskIconColor\n    });\n  }\n\n  head.meta.push({\n    name: 'theme-color',\n    content: options.themeColor\n  });\n  head.meta.push({\n    name: 'apple-mobile-web-app-capable',\n    content: 'yes'\n  });\n  head.meta.push({\n    name: 'apple-mobile-web-app-status-bar-style',\n    content: options.statusBarStyle\n  });\n  head.meta.push({\n    name: 'apple-mobile-web-app-title',\n    content: options.title\n  });\n  head.meta.push({\n    name: 'application-name',\n    content: options.title\n  });\n\n  if (options.msTileColor) {\n    head.meta.push({\n      name: 'msapplication-TileColor',\n      content: options.msTileColor\n    });\n  }\n\n  head.meta.push({\n    name: 'msapplication-TileImage',\n    content: msTileImage\n  });\n};\n\nexport default clientConfig;",null]}