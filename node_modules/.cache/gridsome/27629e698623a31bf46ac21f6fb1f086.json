{"remainingRequest":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/osbendc/Desktop/Github/vinushut-vue/src/main.js","dependencies":[{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/src/main.js","mtime":1617802825924},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js","mtime":1617803144756}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.find\";\n// Plugins\nimport Vuex from 'vuex';\nimport VueApollo from 'vue-apollo'; //import Notifications from 'vue-notification'\n\nimport Notifications from 'vue-notification/dist/ssr';\nimport '~/assets/style/notification.css'; // Dependencies\n\nimport ApolloClient from 'apollo-boost';\nimport fetch from 'isomorphic-fetch';\nimport DefaultLayout from '~/layouts/Default.vue';\nimport VueScrollTo from 'vue-scrollto';\nexport default function (Vue, _ref) {\n  var appOptions = _ref.appOptions,\n      router = _ref.router,\n      head = _ref.head,\n      isClient = _ref.isClient;\n  // Set default layout as a global component\n  Vue.component('Layout', DefaultLayout);\n  Vue.use(Vuex);\n  Vue.use(VueApollo);\n  Vue.use(Notifications);\n  Vue.use(VueScrollTo, {\n    duration: 500,\n    easing: \"ease\"\n  });\n  /*\n  head.link.push({\n    rel: 'stylesheet',\n    href: 'https://fonts.googleapis.com/css?family=Prata'\n  })\n  */\n  // Create Apollo client\n\n  var apolloClient = new ApolloClient({\n    fetch: fetch,\n    uri: \"https://vinushot.myshopify.com/api/2020-07/graphql.json\",\n    headers: {\n      'X-Shopify-Storefront-Access-Token': 'a9425f734f0e7b049528466bbdd2b13e'\n    }\n  }); // Add client to vue-apollo provider\n\n  var apolloProvider = new VueApollo({\n    defaultClient: apolloClient\n  }); // Add provider to vue app\n\n  appOptions.apolloProvider = apolloProvider; // Create Vuex store\n\n  appOptions.store = new Vuex.Store({\n    state: {\n      cart: []\n    },\n    mutations: {\n      addToCart: function addToCart(state, newItem) {\n        var itemExists = state.cart.find(function (item) {\n          return item.variantId === newItem.variantId;\n        });\n        if (itemExists) itemExists.qty += newItem.qty;else state.cart.push(newItem);\n      },\n      removeFromCart: function removeFromCart(state, itemId) {\n        var updatedCart = state.cart.filter(function (item) {\n          return item.variantId !== itemId;\n        });\n        state.cart = updatedCart;\n      }\n    }\n  });\n}",null]}