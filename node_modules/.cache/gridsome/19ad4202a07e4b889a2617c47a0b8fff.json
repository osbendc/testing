{"remainingRequest":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/osbendc/Desktop/Github/vinushut-vue/src/templates/Collection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/src/templates/Collection.vue","mtime":1617802825924},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js","mtime":1617803144756},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/vue-loader/lib/index.js","mtime":1617803146183}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  metaInfo: {\n    title: 'Collections'\n  },\n  data: function data() {\n    return {};\n  },\n  computed: {\n    collection: function collection() {\n      return this.$page.shopifyCollection;\n    }\n  },\n  methods: {\n    selectProduct: function selectProduct(product) {\n      this.$router.push({\n        path: \"/product/\" + product.node.handle\n      });\n    }\n  }\n};",{"version":3,"sources":["Collection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAIA,EAAA,IAAA,EAAA;AAAA,WAAA,EAAA;AAAA,GAJA;AAMA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA,aAAA,KAAA,KAAA,CAAA,iBAAA;AAAA;AADA,GANA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,OADA,EACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,cAAA,OAAA,CAAA,IAAA,CAAA;AAAA,OAAA;AACA;AAHA;AATA,CAAA","sourcesContent":["<template>\n  <Layout>\n    <div class=\"container-inner mx-auto my-16\">\n\n      <div class=\"hero container-inner mx-auto flex flex-col sm:flex-row justify-between py-8\">\n        <div class=\"text-4xl font-bold w-full text-center\">\n          <div class=\"leading-tight font-serif\">{{ collection.title }}</div>\n        </div>\n      </div>\n\n      <div id=\"products\" class=\"flex flex-wrap mb-4 max-w-5xl mx-auto\">\n        <div class=\"md:w-1/2 lg:w-1/3 w-full px-2\" v-on:click=\"selectProduct({ node: product })\" v-for=\"product in collection.products\" :key=\"product.id\">\n          <div class=\"mx-auto max-w-sm overflow-hiddenmx-auto cursor-pointer duration-500 transform hover:scale-110\">\n            <div class=\"w-full rounded-xl h-64 bg-no-repeat bg-contain bg-bottom\" :style=\"{'background-image': 'url(' + product.images[0].src + ')' }\"></div>\n              <div class=\"px-6 pb-4 pt-8 mx-4 -mt-4 mb-4 relative rounded-xl bg-white opacity-75 hover:opacity-100\">\n                <div class=\"font-bold text-xl mb-2\">{{ product.title }}</div>\n                  <div class=\"flex text-sm\">\n                    <div class=\"w-2/3 font-bold\">\n                      <span v-if=\"product.priceRange.minVariantPrice.amount\">\n                        Price : {{ product.priceRange.minVariantPrice.amount }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n</template>\n\n<script>\nexport default {\n  metaInfo: {\n    title: 'Collections'\n  },\n  data: () => ({ \n  }),\n  computed: {\n    collection () { return this.$page.shopifyCollection },\n  },\n  methods: {\n\t\tselectProduct(product) {\n      this.$router.push({ path: \"/product/\" + product.node.handle })\n    },\n  }\n}\n</script>\n\n<page-query>\nquery Collection ($id: ID!) {\n  shopifyCollection (id: $id) {\n    id\n    title\n    descriptionHtml\n    products {\n      id\n      title\n      handle\n      descriptionHtml\n      priceRange {\n        minVariantPrice {\n          amount(format: true, currency: \"USD\")\n        }\n      }\n      images (limit: 1) {\n        id\n        altText\n        src: transformedSrc (maxWidth: 400, maxHeight: 300, crop: CENTER)\n      }\n    }\n  }\n}\n</page-query>"],"sourceRoot":"src/templates"}]}