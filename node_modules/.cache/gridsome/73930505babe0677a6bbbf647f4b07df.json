{"remainingRequest":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/osbendc/Desktop/Github/vinushut-vue/src/templates/Product.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/src/templates/Product.vue","mtime":1617802825925},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js","mtime":1617803144756},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/vue-loader/lib/index.js","mtime":1617803146183}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  metaInfo () {\n    return {\n      title: this.$page.shopifyProduct.title\n    }\n  },\n  data: () => ({\n    selectedOptions: {},\n    quantity: 1\n  }),\n  computed: {\n    product () { return this.$page.shopifyProduct },\n    productOptions () { return this.product.options.filter(({ name }) => name !== 'Title') },\n    currentVariant () {\n      const matchedVariant = this.product.variants.find(variant =>\n        variant.selectedOptions.every(({ name, value }) => value === this.selectedOptions[ name ])\n      )\n      return matchedVariant\n    }\n  },\n  watch: {\n    $route (to, from) {\n      const [firstVariant] = this.product.variants\n      this.selectedOptions = firstVariant.selectedOptions.reduce((options, { name, value }) => ({ [ name ]: value, ...options }), {})\n    }\n  },\n  mounted () {\n    const [firstVariant] = this.product.variants\n    this.selectedOptions = firstVariant.selectedOptions.reduce((options, { name, value }) => ({ [ name ]: value, ...options }), {})\n  },\n  methods: {\n    async addToCart () {\n      const variant = this.currentVariant\n      const payload = {\n        qty: this.quantity,\n        productTitle: this.product.title,\n        variantTitle: variant.title,\n        variantId: variant.id,\n        price: variant.price,\n        image: variant.image\n      }\n      await this.$store.commit('addToCart', payload)\n      this.$notify({\n        title: `Added ${payload.productTitle} to Cart`,\n        type: 'primary'\n      })\n    }\n  }\n}\n",null]}