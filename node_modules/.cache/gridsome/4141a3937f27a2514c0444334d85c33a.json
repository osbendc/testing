{"remainingRequest":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/osbendc/Desktop/Github/vinushut-vue/src/pages/Collections.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/src/pages/Collections.vue","mtime":1617802825924},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/babel-loader/lib/index.js","mtime":1617803144756},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/cache-loader/dist/cjs.js","mtime":1617803144827},{"path":"/Users/osbendc/Desktop/Github/vinushut-vue/node_modules/vue-loader/lib/index.js","mtime":1617803146183}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  metaInfo: {\n    title: 'Collections'\n  },\n  data: function data() {\n    return {};\n  },\n  computed: {\n    collections: function collections() {\n      return this.$page.allShopifyCollection.edges;\n    }\n  },\n  methods: {\n    selectCollection: function selectCollection(product) {\n      this.$router.push({\n        path: \"/collection/\" + product.node.handle\n      });\n    }\n  }\n};",{"version":3,"sources":["Collections.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAIA,EAAA,IAAA,EAAA;AAAA,WAAA,EAAA;AAAA,GAJA;AAMA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA,aAAA,KAAA,KAAA,CAAA,oBAAA,CAAA,KAAA;AAAA;AADA,GANA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,OADA,EACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,iBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,OAAA;AACA;AAHA;AATA,CAAA","sourcesContent":["<template>\n  <Layout>\n    <div class=\"container-inner mx-auto my-16\">\n      <div id=\"collections\" class=\"flex flex-wrap mb-4 max-w-5xl mx-auto\">\n        <div class=\"md:w-1/2 lg:w-1/3 w-full px-2\" v-on:click=\"selectCollection({ node: collection })\" v-for=\"({ node: collection }) in collections\">\n          <div class=\"mx-auto max-w-sm overflow-hidden cursor-pointer duration-500 transform hover:scale-110\">\n            <div class=\"w-full rounded-xl h-64 bg-no-repeat bg-contain bg-bottom\" :style=\"{'background-image': 'url(' + collection.image.src + ')' }\"></div>\n              <div class=\"px-6 pb-4 pt-8 mx-4 -mt-4 mb-4 relative rounded-xl bg-white opacity-75 hover:opacity-100\">\n                <div class=\"font-bold text-xl mb-2\">{{ collection.title }}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Layout>\n</template>\n\n<script>\nexport default {\n  metaInfo: {\n    title: 'Collections'\n  },\n  data: () => ({ \n  }),\n  computed: {\n    collections () { return this.$page.allShopifyCollection.edges },\n  },\n  methods: {\n\t\tselectCollection(product) {\n      this.$router.push({ path: \"/collection/\" + product.node.handle })\n    },\n  }\n}\n</script>\n\n<page-query>\nquery ShopifyProducts {\n  allShopifyCollection (limit: 100) {\n    edges {\n      node {\n        id\n        handle\n        title\n        descriptionHtml\n        image {\n          altText\n          src: transformedSrc(maxWidth: 800, maxHeight: 800, crop: CENTER)\n        }\n      }\n    }\n  }\n}\n</page-query>\n"],"sourceRoot":"src/pages"}]}